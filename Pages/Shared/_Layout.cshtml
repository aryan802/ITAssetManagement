@using ITAssetManagement.Models
@inject UserManager<ApplicationUser> UserManager

<!DOCTYPE html>
<html lang="en" data-bs-theme="light">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"] - ITAssetManagement</title>

    <link href="https://cdn.jsdelivr.net/npm/bootswatch@5.3.3/dist/flatly/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>
    <div class="d-flex" id="wrapper">
        <!-- Sidebar -->
        <nav class="border-end bg-white" id="sidebar-wrapper">
            <div class="sidebar-heading px-3 py-3 fw-bold">ITAMS</div>
            <div class="list-group list-group-flush">
                <a asp-page="/Dashboard" class="list-group-item list-group-item-action">Dashboard</a>
                @if (User.IsInRole("Admin") || User.IsInRole("ITStaff"))
                {
                    <a asp-page="/Assets/Index" class="list-group-item list-group-item-action">Assets</a>
                    <a asp-page="/Vendors/Index" class="list-group-item list-group-item-action">Vendors</a>
                    <a asp-page="/Reports/Index" class="list-group-item list-group-item-action">Reports</a>
                    <a asp-page="/ActivityLogs/Index" class="list-group-item list-group-item-action">Activity Logs</a>
                }
                @if (User.IsInRole("Admin"))
                {
                    <a asp-page="/Employees/Index" class="list-group-item list-group-item-action">Employees</a>
                    <a asp-page="/Admin/ManageUsers" class="list-group-item list-group-item-action">Manage Users</a>
                }
            </div>
        </nav>

        <!-- Page content -->
        <div id="page-content-wrapper">
            <nav class="navbar navbar-expand-lg navbar-light bg-white border-bottom px-4">
                <div class="container-fluid">
                    <button class="btn btn-outline-primary" id="sidebarToggle">☰</button>
                    <div class="ms-auto d-flex align-items-center gap-3">
                        <!-- Dark Mode Toggle -->
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="darkModeToggle">
                            <label class="form-check-label" for="darkModeToggle">Dark Mode</label>
                        </div>

                        @if (User.Identity?.IsAuthenticated ?? false)
                        {
                            var user = await UserManager.GetUserAsync(User);
                            <div class="dropdown">
                                <a class="btn btn-outline-secondary dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                                    @user.FullName
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Profile</a></li>
                                    <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/ChangePassword">Change Password</a></li>
                                    <li><hr class="dropdown-divider" /></li>
                                    <li>
                                        <form method="post" asp-area="Identity" asp-page="/Account/Logout">
                                            <button type="submit" class="dropdown-item">Logout</button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        }
                        else
                        {
                            <a class="btn btn-outline-primary me-2" asp-area="Identity" asp-page="/Account/Login">Login</a>
                            <a class="btn btn-primary" asp-area="Identity" asp-page="/Account/Register">Register</a>
                        }
                    </div>
                </div>
            </nav>

            <!-- Main Content -->
            <main class="container-fluid px-4 py-4">
                <!-- Toast -->
                <div aria-live="polite" aria-atomic="true" class="position-fixed top-0 end-0 p-3" style="z-index: 1050;">
                    <div class="toast" id="liveToast" role="alert" data-bs-delay="3000">
                        <div class="toast-header">
                            <strong class="me-auto">ITAMS</strong>
                            <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
                        </div>
                        <div class="toast-body">
                            @TempData["ToastMessage"]
                        </div>
                    </div>
                </div>

                @RenderBody()
            </main>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Toggle sidebar
        document.getElementById('sidebarToggle')?.addEventListener('click', () => {
            document.getElementById('wrapper')?.classList.toggle('toggled');
        });

        // Show toast
        @if (TempData["ToastMessage"] != null)
        {
                <text>
                    var toastEl = document.getElementById('liveToast');
                    var toast = new bootstrap.Toast(toastEl);
                    toast.show();
                </text>
        }

        // Theme Toggle
        const toggle = document.getElementById("darkModeToggle");
        const html = document.documentElement;

        function setTheme(mode) {
            html.setAttribute("data-bs-theme", mode);
            localStorage.setItem("theme", mode);
            toggle.checked = (mode === "dark");
        }

        toggle.addEventListener("change", () => {
            setTheme(toggle.checked ? "dark" : "light");
        });

        setTheme(localStorage.getItem("theme") || "light");
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>






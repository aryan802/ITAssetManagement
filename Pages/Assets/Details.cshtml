@page
@model ITAssetManagement.Pages.Assets.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Asset</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Asset.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Asset.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Asset.Type)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Asset.Type)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Asset.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Asset.Status)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Asset.PurchaseDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Asset.PurchaseDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Asset.WarrantyExpiry)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Asset.WarrantyExpiry)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Asset.AssignedTo)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Asset.AssignedTo)
        </dd>
        <dt class="col-sm-2">Vendors</dt>
        <dd class="col-sm-10">
            @if (ViewData["Vendors"] is List<string> vendors && vendors.Count > 0)
            {
                @string.Join(", ", vendors)
            }
            else      
            {
                <span class="text-muted">No vendors linked</span>
            }
        </dd>

    </dl>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.Asset.AssetID">Edit</a> |
    <a asp-page="./Index">Back to List</a>
</div>
